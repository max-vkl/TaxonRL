// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/docker-existing-dockerfile
// ----------------------------------------------------------------------------------------------
//    NOTICE: This is only a template. Please make a copy of this file to use as devcontainer.json
// ----------------------------------------------------------------------------------------------
{
    // Put your own built docker image here
    "image": "hiyouga/verl:ngc-th2.6.0-cu126-vllm0.8.4-flashinfer0.2.2-cxx11abi0",
    ////////////////////////////////////////////////////////////
    // -----------------------------------
    // CUSTOMIZE SOME THINGS BELOW HERE !!!!!
    // -----------------------------------
    ////////////////////////////////////////////////////////////
    // Specify which GPU device you want to use (e.g "device=0")
    "runArgs": [
        "--ipc=host",
        "--network=host",
        // UNSAFE. Use with caution. Changes propagate to host.
        // "--pid=host",
        // DO NOT COMMIT THIS ENABLED TO REMOTE.
        // "--gpus",
        //    "device=0",
        "--gpus=\"device=0,1,2,3 \"",
        "-u",
        "0"
    ],
    // ------------------------------------------------------------
    // Setup your mounts and env vars like for a docker run command
    // ------------------------------------------------------------
    // Mount cache files like HuggingFace datasets cache. The user directory inside the container is /home/mamba/
    // Paths need to be absolute, so we use the localEnv variable to get the local user home directory
    // Check HF_DATASETS_CACHE, WANDB_DATA_DIR, XDG_CACHE_HOME etc. env vars to see what you need to mount
    "mounts": [
        "source=${localEnv:HOME}/.ssh,target=/root/.ssh,type=bind,ro", // this is to get access to github 
        "source=${localEnv:HOME}/max/.netrc,target=/home/mamba/.netrc,type=bind", // this is to get WANDB_API_KEY from .netrc
        "source=${localEnv:HOME}/max/.gitconfig,target=/root/.gitconfig,type=bind", // this is to get git credentials
        "source=${localEnv:HOME}/max/.cache,target=/home/mamba/.cache,type=bind", // general cache directory
        // GorillaWatch specific mounts.
        // read only mounts
        //"source=/mnt/vast-gorilla/,target=/workspaces/vast-gorilla,type=bind,ro",
        // read write mounts
        "source=/mnt/vast-gorilla/,target=/workspaces/vast-gorilla,type=bind",
    ],
    "remoteEnv": {
        //"WANDB_API_KEY": "${localEnv:WANDB_API_KEY}",
        "WANDB_API_KEY": "35634fdc31503ce59d78fe1a349b8c662dff24f2",
        "POSTGRESQL_URI": "{POSTGRESQL_URI}",
        "PJRT_DEVICE": "CUDA"
        // "WANDB_DATA_DIR": "${localEnv:WANDB_DATA_DIR}",
        // "WANDB_DIR": "${localEnv:WANDB_DIR}",
        // "HF_DATASETS_CACHE": "${localEnv:HF_DATASETS_CACHE}",
        // "XDG_CACHE_HOME": "${localEnv:XDG_CACHE_HOME}", // if you use a custom cache dir
    },
    ////////////////////////////////////////////////////////////////////
    // -----------------------------------------------------
    // END CUSTOMIZATION OF ENV VARS, MOUNTS, RUN ARGS etc.
    // -----------------------------------------------------
    ////////////////////////////////////////////////////////////////////
    // Features to add to the dev container. More info: https://containers.dev/features.
    // Doesn't work with centOS / RHEL base images, which we use
    "features": {
        "ghcr.io/devcontainers/features/git:1.1.5": {},
    },
    "customizations": {
        // Configure properties specific to VS Code.
        "vscode": {
            // Add the IDs of extensions you want installed when the container is created.
            // These depend on your preferences, we just want to give our recommendations here.
            "extensions": [
                "ms-python.python",
                "VisualStudioExptTeam.vscodeintellicode",
                "github.copilot",
                "kevinrose.vsc-python-indent",
                "ms-python.black-formatter",
                "charliermarsh.ruff",
                "ms-azuretools.vscode-docker",
                // nice to have below
                "jgclark.vscode-todo-highlight",
                "percy.vscode-pydata-viewer",
                "njqdev.vscode-python-typehint",
                "foxundermoon.shell-format",
                "ms-toolsai.jupyter"
            ]
        }
    },
    "postCreateCommand": "pip install -e ."
    // Use 'forwardPorts' to make a list of ports inside the container available locally.
    // "forwardPorts": []
}